name: Analyze PR

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repository (e.g. owner/name)"
        required: true
        type: string
      pr_number:
        description: "Pull request number"
        required: true
        type: string

jobs:
  analyze-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.pull_request.base.ref }}
          path: base

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: refs/pull/${{ github.event.inputs.pr_number }}/head
          path: pr

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-home-v1-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-home-v1-${{ runner.os }}-

      - name: Build & compile
        working-directory: pr
        run: |
          ./gradlew clean build --no-daemon
          echo "compilation_success=true" >> $GITHUB_OUTPUT

      - name: Run tests with coverage
        working-directory: pr
        run: |
          ./gradlew test jacocoTestReport --no-daemon
          echo "execution_success=true" >> $GITHUB_OUTPUT

      - name: Run mutation testing
        working-directory: pr
        run: |
          ./gradlew pitest --no-daemon || true

      - name: Run test smell analysis
        working-directory: pr
        run: |
          ./gradlew testSmellsReport || echo "test_smells_failed=true"

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            pr/**/build/reports/tests/**
            pr/**/build/reports/jacoco/**
            pr/**/build/reports/pitest/**
            pr/**/build/reports/test-smells/**

      - name: Generate summary
        id: summary
        run: |
          echo "📊 Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Compilation: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Execution: ✅" >> $GITHUB_STEP_SUMMARY

          # Coverage
          COV_FILE=$(find pr -name 'jacocoTestReport.xml' | head -n 1)
          if [ -f "$COV_FILE" ]; then
            COV=$(grep -o 'line-rate="[0-9.]*"' "$COV_FILE" | head -n 1 | cut -d'"' -f2)
            echo "- Coverage: ${COV}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Coverage: ❌ Not found" >> $GITHUB_STEP_SUMMARY
          fi

          # Mutation
          if [ -f pr/build/reports/pitest/index.html ]; then
            echo "- Mutation: ✅ Report generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Mutation: ❌ No report" >> $GITHUB_STEP_SUMMARY
          fi

          # Test Smells
          if [ -f pr/build/reports/test-smells/test-smells-report.json ]; then
            echo "- Test Smells: ✅ Report generated" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Test Smells: ❌ No report" >> $GITHUB_STEP_SUMMARY
          fi

