name: Analyze PR Quality

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repository (e.g. owner/name)"
        required: true
        type: string
      pr_number:
        description: "Pull request number"
        required: true
        type: string

jobs:
  analyze-pr:
    runs-on: ubuntu-latest

    steps:
      # Checkout base repo
      - name: Checkout base repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          path: base
          fetch-depth: 0

      # Fetch the PR branch
      - name: Fetch PR code
        run: |
          git clone https://github.com/${{ github.event.inputs.repo }} pr
          cd pr
          git fetch origin pull/${{ github.event.inputs.pr_number }}/head:pr-branch
          git checkout pr-branch

      # Setup Java & Kotlin
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # Detect build system
      - name: Detect build tool
        id: detect
        run: |
          if [ -f "pr/build.gradle" ] || [ -f "pr/build.gradle.kts" ]; then
            echo "tool=gradle" >> $GITHUB_OUTPUT
          elif [ -f "pr/pom.xml" ]; then
            echo "tool=maven" >> $GITHUB_OUTPUT
          else
            echo "No supported build tool detected (Gradle/Maven)."
            exit 1
          fi

      # Compile project
      - name: Compile Project
        id: compile
        run: |
          set +e
          if [ "${{ steps.detect.outputs.tool }}" = "gradle" ]; then
            cd pr
            ./gradlew clean compileJava compileTestJava
          else
            cd pr
            mvn -B clean compile test-compile
          fi
          echo "compilation_success=$?" >> $GITHUB_OUTPUT
          set -e

      # Run tests
      - name: Run Tests
        id: tests
        run: |
          set +e
          if [ "${{ steps.detect.outputs.tool }}" = "gradle" ]; then
            cd pr
            ./gradlew test
          else
            cd pr
            mvn -B test
          fi
          echo "execution_success=$?" >> $GITHUB_OUTPUT
          set -e

      # Run Coverage
      - name: Run Coverage
        run: |
          if [ "${{ steps.detect.outputs.tool }}" = "gradle" ]; then
            cd pr
            ./gradlew jacocoTestReport
          else
            cd pr
            mvn -B jacoco:report
          fi

      # Run Mutation Testing
      - name: Run Mutation Testing
        run: |
          if [ "${{ steps.detect.outputs.tool }}" = "gradle" ]; then
            cd pr
            ./gradlew pitest
          else
            cd pr
            mvn -B org.pitest:pitest-maven:mutationCoverage
          fi

      # Run Test Smells
      - name: Run Test Smells
        run: |
          if [ "${{ steps.detect.outputs.tool }}" = "gradle" ]; then
            cd pr
            ./gradlew testSmells || true
          else
            cd pr
            mvn -B test-compile || true
          fi

      # Upload reports
      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: pr-analysis-reports
          path: |
            pr/**/build/reports/tests/**
            pr/**/build/reports/jacoco/**
            pr/**/build/reports/pitest/**
            pr/**/build/reports/testSmells/**
            pr/**/target/surefire-reports/**
            pr/**/target/site/jacoco/**
            pr/**/target/pit-reports/**

      # Final summary
      - name: Generate Summary
        run: |
          echo "📊 PR Analysis Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Compilation: ${{ steps.compile.outputs.compilation_success == 0 && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Execution: ${{ steps.tests.outputs.execution_success == 0 && '✅ Success' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage: see JaCoCo report" >> $GITHUB_STEP_SUMMARY
          echo "- Mutation: see PIT report" >> $GITHUB_STEP_SUMMARY
          echo "- Test Smells: see testSmells report" >> $GITHUB_STEP_SUMMARY


